#appsSection.slider_section
  // Buttons mini app
  #buttons.hide.miniapp_section
    .category_name Single button
    input.button.button_1_width(type='button', name='button1', value='SINGLE BUTTON')
    .category_name Two buttons
    table.fill(cellpadding='0', cellspacing='0')
      tr
        td.alignL
          input.button.button_2_in_row_width(type='button', name='button1', value='BUTTON1')
        td.alignR
          input.button.button_2_in_row_width(type='button', name='button2', value='BUTTON2')
    lists.category_name Three buttons
    table.fill(cellpadding='0', cellspacing='0')
      tr
        td.alignL
          input.button.button_3_in_row_width(type='button', name='button1', value='BTN1')
        td.alignC
          input.button.button_3_in_row_width(type='button', name='button2', value='BTN2')
        td.alignR
          input.button.button_3_in_row_width(type='button', name='button3', value='BTN3')
    .category_name Primary and secondary buttons
    table.fill(cellpadding='0', cellspacing='0')
      tr
        td.alignL.button_3_in_row_width
          input.button.button_3_in_row_width(type='button', name='button1', value='BTN1')
        td.alignL.button_3_in_row_width
          input.button.button_3_in_row_width(type='button', name='button2', value='BTN2')
        td.alignR
          input.button.button_3_in_row_width(type='button', name='button3', value='BTN3')
  // End Buttons mini app
  // RadioButtons mini app
  include apps/radioButtons
  // End RadioButtons mini app
  // CheckBoxes mini app
  include apps/checkBoxes
  // End CheckBoxes mini app
  // Lists mini app
  include apps/lists
  // End Lists mini app
  // Tabs mini app
  include apps/tabs
  
  // End Tabs mini app
  // TextFields mini app
  #textFields.slider_section.hide
    .text_field_item
      div Label
      .text_entry_with_label
        table.fill(cellpadding='0', cellspacing='0', summary='Button Table')
          tr
            td.text_input_cell
              input(type='text', name='entry2')
            td
              span km
    .text_field_item
      div Icon button
      .text_entry_with_icon
        table.fill(cellpadding='0', cellspacing='0', summary='Button Table')
          tr
            td.text_input_cell
              input(type='text', name='entry2')
            td(onclick='')
              img(src='img/header_search.png', height='40', width='43', alt='Home')
    .text_field_item
      div Text button
      .text_entry_with_button
        table.fill(cellpadding='0', cellspacing='0', summary='Button Table')
          tr
            td.text_input_with_button_cell
              input(type='text', name='entry2')
            td.alignR
              input.button.text_entry_button(type='button', name='button1', value='UPDATE')
  // End TextFields mini app
  // CarouselInItem mini app
  #carouselInItem.slider_section.hide
    div
      .list_section_header Carousel, in-item
      table.fill.carousel_in_item_height(cellpadding='0', cellspacing='0')
        tr
          td.alignL
            input.previous_button_high(type='button', onclick='\
            mwl.iterateClass("#carousel_in_item_images", "carousel_in_item_img", "prev", 5, false, null);\
            ')
          td.alignC(width='75%')
            .carousel_in_item_container
              #carousel_in_item_images.strip_carousel_in_item.carousel_in_item_img0
                table.carousel_in_item_height(cellspacing='0', cellpadding='0', border='0', summary='Images Table')
                  tr
                    td#t2
                      img.carousel_in_item_image(src='img/img1.jpg', alt='image1')
                    td#t1
                      img.carousel_in_item_image(src='img/img2.jpg', alt='image2')
                    td#t3
                      img.carousel_in_item_image(src='img/img3.jpg', alt='image3')
                    td#t4
                      img.carousel_in_item_image(src='img/img4.jpg', alt='image4')
                    td#t5
                      img.carousel_in_item_image(src='img/img5.jpg', alt='image5')
          td.alignR
            input.next_button_high(type='button', onclick='\
            mwl.iterateClass("#carousel_in_item_images", "carousel_in_item_img", "next", 5, false, null);\
            ')
    .text_block
      | Lorem ipsum dolor sit amet,
      | consectetur adipisicing elit, sed do eiusmod tempor incididunt
      | ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis
      | nostrud exercitation ullamco laboris nisi ut aliquip ex ea
      | commodo consequat.
  // End CarouselInItem mini app
  // Carousel mini app
  #carouselItem.slider_section.hide
    #slideshow_buttons_bar
      #non_sliding_buttons_bar.carousel_buttons_bar.show
        input.previous_button(type='button', onclick='mwl.iterateClass("#carousel_images", "carousel_img", "prev", 5, true, null);')
        input.play_button(type='button', onclick='\
        mwl.setGroupTarget("#slideshow_buttons_bar", "#sliding_buttons_bar", "show", "hide");\
        mwl.iterateClass("#carousel_images", "carousel_img", "next", 5, false, null);\
        mwl.timer("timer1", 2000, 0, \
        "mwl.iterateClass(\"#carousel_images\", \"carousel_img\", \"next\", 5, true, null )");\
        ')
        input.next_button(type='button', onclick='mwl.iterateClass("#carousel_images", "carousel_img", "next", 5, true, null);')
      #sliding_buttons_bar.carousel_buttons_bar.hide
        input.previous_button(type='button', onclick='\
        mwl.stopTimer("timer1");\
        mwl.setGroupTarget("#slideshow_buttons_bar", "#non_sliding_buttons_bar", "show", "hide"); \
        mwl.iterateClass("#carousel_images", "carousel_img", "prev", 5, false, null);\
        ')
        input.pause_button(type='button', onclick='\
        mwl.stopTimer("timer1");\
        mwl.setGroupTarget("#slideshow_buttons_bar", "#non_sliding_buttons_bar", "show", "hide")\
        ')
        input.next_button(type='button', onclick='\
        mwl.stopTimer("timer1"); \
        mwl.setGroupTarget("#slideshow_buttons_bar", "#non_sliding_buttons_bar", "show", "hide"); \
        mwl.iterateClass("#carousel_images", "carousel_img", "next", 5, false, null);\
        ')
    .carousel_container
      #carousel_images.strip_carousel.carousel_img0
        table.carousel_in_item_height(cellspacing='0', cellpadding='0', border='0', summary='Images Table')
          tr
            td
              img.carousel_image(src='img/img1.jpg', alt='image1')
            td
              img.carousel_image(src='img/img2.jpg', alt='image2')
            td
              img.carousel_image(src='img/img3.jpg', alt='image3')
            td
              img.carousel_image(src='img/img4.jpg', alt='image4')
            td
              img.carousel_image(src='img/img5.jpg', alt='image5')
  // End Carousel mini app
  // DynamicLooping mini app
  #dynamicLooping.slider_section.hide
    .list_section_header Dynamic looping
    // DynamicLooping Control Content
    #dynamicLooping_content
      #dynLoop_content_1.show
        .text_block Press one button.
        table.fill(cellpadding='0', cellspacing='0')
          tr
            td.alignR
              input.button.button_3_in_row_width(type='button', name='rock_button', value='Rock', onclick='\
              rockPaperScissors(0);')
            td.alignC
              input.button.button_3_in_row_width(type='button', name='paper_button', value='Paper', onclick='\
              rockPaperScissors(1);')
            td.alignL
              input.button.button_3_in_row_width(type='button', name='scissors_button', value='Scissors', onclick='\
              rockPaperScissors(2);')
      #dynLoop_content_2.hide
        .checkable_list_item
          table.fill(cellpadding='0', cellspacing='0')
            tr
              td.list_item_left_align You chose
              td.list_item_right_align
                img#player_img(height='33', width='30', alt='My choice')
        .checkable_list_item
          table.fill(cellpadding='0', cellspacing='0')
            tr
              td.list_item_left_align Computer chose
              td.list_item_right_align
                img#opponent_img(height='33', width='30', alt='Computers choice')
        .text_block
          table.fill(cellpadding='0', cellspacing='0')
            tr
              td#game_over_txt.list_item_left_align
        .fill
          input.next_game_button(type='button', name='nextGameBtn', value='Next game', onclick='\
          mwl.setGroupTarget("#dynamicLooping_content", "#dynLoop_content_1", "show", "hide");\
          ')
  // End DynamicLooping mini app
  // ExpandableList mini app
  include apps/expandableList
  
  // End ExpandableList mini app
  // TabbedPages mini app
  #tabbedPages.slider_section.hide
    table.fill(cellpadding='0', cellspacing='0', summary='Tab Table')
      tr#tabbedPagesTabBar
        td#tabbedPagesTab_1.tab.tab_3_tabs.tabbed_pages_tab_selected(onclick='\
        mwl.setGroupTarget("#tabbedPagesTabControlContent", "#tabbedPagesTab_1_content", "show", "hide");\
        mwl.setGroupTarget("#tabbedPagesTabBar", "#tabbedPagesTab_1", "tabbed_pages_tab_selected", "tab_not_selected");\
        ')
          img(src='img/tab_list.png', alt='smile')
        td#tabbedPagesTab_2.tab.tab_3_tabs.tab_not_selected(onclick='\
        mwl.setGroupTarget("#tabbedPagesTabControlContent", "#tabbedPagesTab_2_content", "show", "hide");\
        mwl.setGroupTarget("#tabbedPagesTabBar", "#tabbedPagesTab_2", "tabbed_pages_tab_selected", "tab_not_selected");\
        ')
          img(src='img/tab_group.png', alt='smile')
        td#tabbedPagesTab_3.tab.tab_3_tabs_right.tab_not_selected(onclick='\
        mwl.setGroupTarget("#tabbedPagesTabControlContent", "#tabbedPagesTab_3_content", "show", "hide");\
        mwl.setGroupTarget("#tabbedPagesTabBar", "#tabbedPagesTab_3", "tabbed_pages_tab_selected", "tab_not_selected");\
        ')
          img(src='img/tab_contact.png', alt='smile')
    // Tab Control Content
    #tabbedPagesTabControlContent
      // First tab content
      #tabbedPagesTab_1_content.show
        .tabbed_pages_picture_list_item(onclick='')
          img.picture_list_item_image(src='img/tab_list.png', height='20', width='20', alt='smile')
          span.valignMdl Item 1
        .tabbed_pages_picture_list_item(onclick='')
          img.picture_list_item_image(src='img/tab_list.png', height='20', width='20', alt='smile')
          span.valignMdl Item 2
        .tabbed_pages_picture_list_item(onclick='')
          img.picture_list_item_image(src='img/tab_list.png', height='20', width='20', alt='smile')
          span.valignMdl Item 3
        .tabbed_pages_picture_list_item(onclick='')
          img.picture_list_item_image(src='img/tab_list.png', height='20', width='20', alt='smile')
          span.valignMdl Item 4
      // End First tab content
      // Second tab content
      #tabbedPagesTab_2_content.hide
        .tabbed_pages_picture_list_item(onclick='')
          img.picture_list_item_image(src='img/tab_group.png', height='20', width='20', alt='smile')
          span.valignMdl Item 1
        .tabbed_pages_picture_list_item(onclick='')
          img.picture_list_item_image(src='img/tab_group.png', height='20', width='20', alt='smile')
          span.valignMdl Item 2
        .tabbed_pages_picture_list_item(onclick='')
          img.picture_list_item_image(src='img/tab_group.png', height='20', width='20', alt='smile')
          span.valignMdl Item 3
        .tabbed_pages_picture_list_item(onclick='')
          img.picture_list_item_image(src='img/tab_group.png', height='20', width='20', alt='smile')
          span.valignMdl Item 4
      // End Second tab content
      // Third tab content
      #tabbedPagesTab_3_content.hide
        .tabbed_pages_picture_list_item(onclick='')
          img.picture_list_item_image(src='img/tab_contact.png', height='20', width='20', alt='smile')
          span.valignMdl Item 1
        .tabbed_pages_picture_list_item(onclick='')
          img.picture_list_item_image(src='img/tab_contact.png', height='20', width='20', alt='smile')
          span.valignMdl Item 2
        .tabbed_pages_picture_list_item(onclick='')
          img.picture_list_item_image(src='img/tab_contact.png', height='20', width='20', alt='smile')
          span.valignMdl Item 3
        .tabbed_pages_picture_list_item(onclick='')
          img.picture_list_item_image(src='img/tab_contact.png', height='20', width='20', alt='smile')
          span.valignMdl Item 4
      // End Third tab content
  // End TabbedPages mini app
  // Picker mini app
  #picker.slider_section.hide
    #picker_content
      #picker_button_content.show
        .fill
          input#picker_button.button.centered_button(type='button', value='Value is 1', onclick='\
          mwl.setGroupTarget("#picker_content", "#picker_list_content", "show", "hide");\
          mwl.setGroupTarget("#navigateToggle", "#picker_backButton", "show", "hide");\
          ')
      #picker_list_content.hide
        .list_section_header Picker
        .text_list_item(onclick='setPickerValue(1);') Value is 1
        .text_list_item(onclick='setPickerValue(2);') Value is 2
        .text_list_item(onclick='setPickerValue(3);') Value is 3
        .text_list_item(onclick='setPickerValue(4);') Value is 4
        .text_list_item(onclick='setPickerValue(5);') Value is 5
        .text_list_item(onclick='setPickerValue(6);') Value is 6
  // End Picker mini app
  // TreeStructure mini app
  #treeStructure.slider_section.hide
    //
       NOTE: The tree view content is being loaded
                                      from within the utils.js's generateTreeView() method! 
  // End TreeStructure mini app
  // FileUpload mini app
  #fileUpload.slider_section.hide
    // FileUpload Control Content
    #fileUpload_content
      // Base view
      #fileUpload_base_view.show
        .list_section_header File upload - base view
        .fill
          input.button.centered_button(type='button', name='start_upload_btn', value='Start upload flow', onclick='\
          mwl.setGroupTarget("#fileUpload_content", "#fileUpload_select_view", "show", "hide");\
          ')
      // Select & Upload view
      #fileUpload_select_view.hide
        .list_section_header File upload - file select
        .fill
          form(action='http://samples.ndapplab.com/UploadDownload/upload/upload.php', method='post', enctype='multipart/form-data')
            input#file.input_select(type='file', name='userfile')
            input.button.upload_download_button(type='submit', value='UPLOAD')
  // End FileUpload mini app
  // FileDownload mini app
  #fileDownload.slider_section.hide
    // FileDown Control Content
    #fileDownload_content
      // Base view
      #fileDownload_base_view.show
        .list_section_header File download - base view
        .fill
          input.button.centered_button(type='button', name='start_download_btn', value='Start download flow', onclick='\
          mwl.setGroupTarget("#fileDownload_content", "#fileDownload_select_view", "show", "hide");\
          ')
      // Select & Download view
      #fileDownload_select_view.hide
        .list_section_header File download - file select
        .fill.image_grid
          span(onclick='\
          mwl.setGroupTarget("#fileDownload_content", "#fileDownload_details_view", "show", "hide");\
          setImageDetails("img1.jpg");\
          ')
            img.download_images(src='img/img1.jpg', alt='Mountain lake')
          span(onclick='\
          mwl.setGroupTarget("#fileDownload_content", "#fileDownload_details_view", "show", "hide");\
          setImageDetails("img2.jpg");\
          ')
            img.download_images(src='img/img2.jpg', alt='Desert')
          span(onclick='\
          mwl.setGroupTarget("#fileDownload_content", "#fileDownload_details_view", "show", "hide");\
          setImageDetails("img3.jpg");\
          ')
            img.download_images(src='img/img3.jpg', alt='Sunset church')
          span(onclick='\
          mwl.setGroupTarget("#fileDownload_content", "#fileDownload_details_view", "show", "hide");\
          setImageDetails("img4.jpg");\
          ')
            img.download_images(src='img/img4.jpg', alt='Crocodile lake')
      // Image details view
      #fileDownload_details_view.hide
        .list_section_header File download - Image details
        .big_image_wrapper
          img#download_image(alt='Image to download')
        #download_image_name.text_block Placeholder.jpg
        input#download_button.button.upload_download_button(type='submit', value='DOWNLOAD')
  // End FileUpload mini app
  // PageTitleLink mini app
  #pageTitleLink.slider_section.hide
    .title_link_header Press title link to main page
    #pageTitleLink_content
  // End PageTitleLink mini app
  // Password mini app
  #passwords.slider_section.hide
    // Passwords Control Content
    #passwords_content
      // Password query view
      #password_query_view.show
        .list_section_header Try different password 2nd time
        form(action='#')
          .text_field_item
            div Username
            .text_entry_with_label
              table.fill(cellpadding='0', cellspacing='0', summary='Button Table')
                tr
                  td.text_input_cell
                    input#name(type='text')
          .text_field_item
            div Password
            .text_entry_with_label
              table.fill(cellpadding='0', cellspacing='0', summary='Button Table')
                tr
                  td.text_input_cell
                    input#password(type='password')
          input.button.centered_button(type='submit', value='Sign In', onclick='\
          getUsernameAndPassword();\
          mwl.setGroupTarget("#passwords_content", "#password_login_view", "show", "hide");\
          ')
        .fill
          input#help_button.button.centered_button(type='button', value='Help', onclick='\
          mwl.setGroupTarget("#passwords_content", "#password_help_view", "show", "hide");\
          ')
      // Password login in view
      #password_login_view.hide
        .list_section_header Try different password 2nd time
        .text_block You are logged in.
        .text_block Clear the password from main view.
      #password_help_view.hide
        .list_section_header Help
        .information_text_block
          b Help - Passwords
          br
          br
          | This pattern shows a standard login procedure.
          | People can sign in for the first time and the application asks the user if it should automatically fill-in the password next time.
          | If the password is saved, but changed during later login, the application asks to update the password.
          | Help should always be shown in a Login/sign-in view to explain the relevant credential and how to register for the service if necessary or how to retrieve a forgotten password.
  // End Password mini app
  // Open web link mini app
  #openWebLink.slider_section.hide
    // ProgressIndicator Control Content
    #progressIndicator_content
      .fill
        input#open_web_link_button.button.centered_button(type='button', value='Open web link', onclick='mwl.loadURL("http://www.nokia.com");')
  // End Open web link mini app
  // Search mini app
  #search.slider_section.hide
    //
       NOTE: The Search content is being loaded
                                      from within the utils.js's createSearchList() method! 
  // End Search mini app
  // SharingContent mini app
  #sharingContent.slider_section.hide
    .list_section_header Sharing
    .text_block.share_text_block
      | Lorem ipsum dolor sit amet, consectetur adipisicing elit.
    table.share_table(cellspacing='5', cellpadding='0')
      tr
        td#share_title Share
        td.alignR
          a(href='sms:?body=LoremIpsumDolorSitAmet')
            img(src='img/share_sms.png')
        td.alignR
          a(href='http://www.facebook.com/sharer.php?u=LoremIpsumDolorSitAmet')
            img(src='img/share_facebook.png')
  // End SharingContent mini app
  // Information "mini app" for Elements
  #information_elements.slider_section.hide
    .list_section_header Information
    .information_text_block
      b Information – Elements
      br
      br
      b Buttons
      | show a variety of buttons grouped in a row. The group can have a headline and at maximum three buttons with different spacing in a row.
      br
      br
      b Buttons – radio
      | demonstrate radio button groups. “Normal” tab shows a list with a single radio button group, “Inactive” tab displays an inactive radio button group, and “Grouped” tab shows two independent radio button groups, separated by a header. A radio button group requires always one item to be selected.
      br
      br
      b Check boxes
      | demonstrate check box groups. “Normal” tab shows a list with a single check box group, “Inactive” tab displays an inactive check box group, and “Grouped” tab shows two independent check box groups, separated by a header. A check box group can have none, one, or multiple items selected at the same time.
      br
      br
      b Lists
      | in this example are compiled of three different items: single line item; single line item with an icon; and two-row item with a title, content, time stamp and an indicator icon. A list can be without a separator (Normal), with a separator (Label), grouped (Table), or it can be organised with expanding headers/collapsing lists (Category).
      br
      br
      b Tabs
      | illustrate six different examples. There are tabs with icons and tabs with text; there is an example of both cases with two, three and four tabs. The examples are chosen via the button in the content area. It opens a list containing the six choices.
      br
      br
      b Text fields
      | may carry additional information, such as a unit of measurement. There can also be a button with an icon which uses the full height of the field area (search icon in the example), or an embedded button with text (Update button in the example).
      br
      br
      b Basic navigation
      br
      | - Exit only via Options menu or red end key.
      br
      | - Back should be used for returning to the previous state if there is no other primary function.
      br
      | - Home should be used if back is not meaningful or if the back flow is not possible through the entire application, i.e. there is a primary action in a previous view preventing “back”. Home can be linked to the header or to the primary action.
      br
    .information_text_block
      br
      b Nokia Web Tools
      br
      br
      | The example you are now using demonstrates how user interfaces can be created with Nokia Web Tools - the way to create fluid web application experiences for the Xpress web browser.
      br
      br
      | All the views use client side optimisations extensively, to avoid proxy server round trips. Explore the project
      | at
      a(href='http://projects.developer.nokia.com/webappsuivisualisation/') Nokia Developer Projects
      | to find out how it is made!
  // End Information for Elements mini app
  // Information for Navigation mini apps
  #information_navigation.slider_section.hide
    .list_section_header Information
    .information_text_block
      b Information – Navigation
      br
      br
      b Carousel, in-item
      | shows images so that they use only a part of the actual view. This could be, for example, an information page about a certain item containing technical data and images. It is only possible to jump to the next or previous image.
      br
      br
      b Carousel, item
      | shows images so that they use the whole view. It is in practice a gallery where people can move to the next or previous image. It is also possible to show all images automatically one after another with a predefined delay between images (in the example this functionality can be started with Play).
      br
      br
      b Dynamic looping
      | is demonstrated with the rock-paper-scissors game. Since the game logic requires a server, the application connects to the server automatically after people have selected one of the three choices. The app shows the server’s choice and the player’s choice. Since the previous results are not saved, back-stepping is not meaningful, as it would initiate a new server call every time. Therefore, people can just move forward to a new game or leave the example and return to the main menu.
      br
      br
      b Expandable list
      | shows single line items organised into an expandable headers/collapsible list. The header expands/list collapses by tapping the related “Category” header.
      br
      br
      b Picker
      | demonstrates the change of the value which is embedded into a button via a related selection list. Tapping the button opens the list. Selecting a value closes the list. People can cancel the selection by tapping the back button.
      br
      br
      b Tabbed pages
      | illustrate the basic (horizontal) navigation for web apps. It means that all views are on the same hierarchical level. Back will return to the main view.
      br
      br
      b Tree structure
      | is a simple drill-down structure with 3 hierarchy levels. Back brings people to the previous view. The drill-down path is shown as a breadcrumb in the content header.
      br
      br
      b Basic navigation
      br
      | - Exit only via Options menu or red end key.
      br
      | - Back should be used for returning to the previous state if there is no other primary function.
      br
      | - Home should be used if back is not meaningful or if the back flow is not possible through the entire application, i.e. there is a primary action in a previous view preventing “back”. Home can be linked to the header or to the primary action.
      br
    .information_text_block
      br
      b Nokia Web Tools
      br
      br
      | The example you are now using demonstrates how user interfaces can be created with Nokia Web Tools - the way to create fluid web application experiences for the Xpress web browser.
      br
      br
      | All the views use client side optimisations extensively, to avoid proxy server round trips. Explore the project
      | at
      a(href='http://projects.developer.nokia.com/webappsuivisualisation/') Nokia Developer Projects
      | to find out how it is made!
  // End Information for Navigation mini app
  // Information for Pattern mini apps
  #information_patterns.slider_section.hide
    .list_section_header Information
    .information_text_block
      b Information – Patterns
      br
      br
      b File upload
      | requires people to select the file to be uploaded (via an API). After that, people return to the upload view and confirm the upload process. Uploading is done by the browser. After upload completion, the application returns to the originating page.
      br
      br
      b File download
      | requires people to select a file to be downloaded – in this case from a small gallery. After that, people move to the download view with a thumbnail of the image to be loaded, and they can confirm the download process. Downloading is done by the browser, and downloads can be found from the browser. After download completion, the application returns to the first page.
      br
      br
      b Page title link
      | demonstrates how tapping the page title brings people back to the start view of this mini app. This pattern should be used in case the primary function is reserved for something else than “back” or “home” navigation.
      br
      br
      b Passwords
      | show a standard login procedure. People can sign in for the first time and the application asks the user if it should automatically fill in the password next time. If the password is saved, but changed during a later login, the application asks to update the password. Help should always be shown in a Login/sign-in view to explain the relevant credentials and how to register for the service if necessary, and also how to retrieve a forgotten password.
      br
      br
      b Open webpage
      | demonstrates a link to a new webpage outside the web app. The browser will return from the web page to the web app after people have finished browsing the web page.
      br
      br
      b Search
      | shows how to find an item within a given list. Search is opened by tapping the search icon. The search bar is brought up and it is now possible to fill in a search string. In this example, try e.g. “1” to get a fair amount of results. After closing the keypad, it is necessary to tap the search icon again. Pressing the blue handle hides the search bar. People can return to the main view by pressing the title bar.
      br
      br
      b Sharing
      | content illustrates that sharing links either opens a related web link (Facebook in the example), or an internal API for sending the content via SMS.
      br
      br
      b Basic navigation
      br
      | - Exit only via Options menu or red end key.
      br
      | - Back should be used for returning to the previous state if there is no other primary function.
      br
      | - Home should be used if back is not meaningful or if the back flow is not possible through the entire application, i.e. there is a primary action in a previous view preventing “back”. Home can be linked to the header or to the primary action.
      br
    .information_text_block
      br
      b Nokia Web Tools
      br
      br
      | The example you are now using demonstrates how user interfaces can be created with Nokia Web Tools - the way to create fluid web application experiences for the Xpress web browser.
      br
      br
      | All the views use client side optimisations extensively, to avoid proxy server round trips. Explore the project
      | at
      a(href='http://projects.developer.nokia.com/webappsuivisualisation/') Nokia Developer Projects
      | to find out how it is made!
  // End Information for Patterns mini app